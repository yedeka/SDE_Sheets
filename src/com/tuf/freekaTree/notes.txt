1] Iterative inorder
2] Iterative postorder 2 stacks
3] Iterative postorder 1 stack
4] PreOrder, Inorder and PostOrder traversals of tree
5] Level order traversal
6] Maximum depth of binary tree
7] Check for balanced binary tree - Based on height of tree
8] Diameter of binary tree. - Based on height of tree
9] Max depth sum. - Based on height of tree
10] Are trees identicle - based on traversal.
11] Zig zag traversal. - Level order with a flag to put left first or right.
12] Boundary traversal in a binary tree.
13] Right/Left view of Binary tree.
14] Symmetrical Binary Tree.
15] Root to node path.
=============================================================================
16] Width of shadow of a binary tree. - Pepcoding
17] Width of a binary tree. - Pepcoding
18] Serialize a binary tree - Pepcoding
19] Deserialize a binary tree - Pepcoding (Iterative approach using stack and levels)
20] Children sum property. Very important complex problem.
21] Nodes at distance K - Level order traversal approach of running 2 loops.
22] Burning a binary tree - Level order traversal with parent pointers calculation.
23] Preparing a binary tree from Inorder and Pre-order.
24] Preparing a binary tree from Inorder and Post-order.
25] Morris_Traversal - Preorder, Postorder.
26] Flatten Binary Tree to Linked List - Recursive approach - TC => O(N), SC => O(N)
26 a] Flatten Binary Tree to Linked List - Iterative approach using stack - TC => O(N), SC => O(N)
26 b] Flatten Binary Tree to Linked List - Iterative approach using Morris Order traversal - TC => O(N), SC => O(1)
=============================================================================
27] Cameras in binary Tree - (LC968 - https://leetcode.com/problems/binary-tree-cameras/) Pepcoding
28] House robber in binary tree - ( LC337 - https://leetcode.com/problems/house-robber-iii/) Pepcoding
29] Longest zig zag path in binary tree - (LC1372 - https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree/) Pepcoding
30] Is Valid BST - Using Inorder - Pepcoding (LC98 - https://leetcode.com/problems/validate-binary-search-tree/)
31] Recover Binary Tree - Using Morris traversal - Pepcoding (LC99 - https://leetcode.com/problems/recover-binary-search-tree/)
32] Construct a binary tree from in order and level order - Pepcoding
33] Serialize and deserialize a n-ary tree - (LC428 - https://leetcode.com/problems/serialize-and-deserialize-n-ary-tree/)
34] Verticle Order of binary tree - Method II - Pepcoding
35] Diagonal order traversal of binary tree. - Pepcoding
36] Diagonal order traversal anticlockwise. - Pepcoding
37] Verticle Order sum iterative - GFG (https://www.geeksforgeeks.org/vertical-sum-in-a-given-binary-tree/)
38] Verticle Order II - Sort the elements in ascending order at same horizontal level.(LC987 - https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree/)
39] Diagonal Order Sum - Pepcoding
40] Diagonal Order Sum - BFS - Pepcoding
41] Binary Search Tree Iterator - Morris Traversal (LC173 - https://leetcode.com/problems/binary-search-tree-iterator/)
42] BST Iterator - Stack method.
43] Root to Node path - Heap Mover method.
44] Root to Node path - return type method.
45] Nodes at k distance using DFS traversal - Non optimal - Pepcoding (Check in traversal package)
46] Nodes at k space optimized -
